// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechJobs.Infrastructure.Data;

#nullable disable

namespace TechJobs.Infrastructure.Migrations
{
    [DbContext(typeof(TechJobsDbContext))]
    [Migration("20250624015936_AddGenderRelNationMarital")]
    partial class AddGenderRelNationMarital
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TechJobs.Models.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenderId"));

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GenderId");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            GenderId = 1,
                            GenderName = "Male"
                        },
                        new
                        {
                            GenderId = 2,
                            GenderName = "Female"
                        },
                        new
                        {
                            GenderId = 3,
                            GenderName = "Other"
                        });
                });

            modelBuilder.Entity("TechJobs.Models.MaritalStatus", b =>
                {
                    b.Property<int>("MaritalStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaritalStatusId"));

                    b.Property<string>("MaritalStatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaritalStatusId");

                    b.ToTable("MaritalStatuses");

                    b.HasData(
                        new
                        {
                            MaritalStatusId = 1,
                            MaritalStatusName = "Single"
                        },
                        new
                        {
                            MaritalStatusId = 2,
                            MaritalStatusName = "Married"
                        },
                        new
                        {
                            MaritalStatusId = 3,
                            MaritalStatusName = "Divorced"
                        },
                        new
                        {
                            MaritalStatusId = 4,
                            MaritalStatusName = "Widowed"
                        });
                });

            modelBuilder.Entity("TechJobs.Models.Nationality", b =>
                {
                    b.Property<int>("NationalityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NationalityId"));

                    b.Property<string>("NationalityName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("NationalityId");

                    b.ToTable("Nationalities");

                    b.HasData(
                        new
                        {
                            NationalityId = 1,
                            NationalityName = "Bangladeshi"
                        },
                        new
                        {
                            NationalityId = 2,
                            NationalityName = "Indian"
                        },
                        new
                        {
                            NationalityId = 3,
                            NationalityName = "Pakistani"
                        },
                        new
                        {
                            NationalityId = 4,
                            NationalityName = "Nepali"
                        },
                        new
                        {
                            NationalityId = 5,
                            NationalityName = "Other"
                        });
                });

            modelBuilder.Entity("TechJobs.Models.Religion", b =>
                {
                    b.Property<int>("ReligionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReligionId"));

                    b.Property<string>("ReligionName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ReligionId");

                    b.ToTable("Religions");

                    b.HasData(
                        new
                        {
                            ReligionId = 1,
                            ReligionName = "Islam"
                        },
                        new
                        {
                            ReligionId = 2,
                            ReligionName = "Christianity"
                        },
                        new
                        {
                            ReligionId = 3,
                            ReligionName = "Hinduism"
                        },
                        new
                        {
                            ReligionId = 4,
                            ReligionName = "Buddhism"
                        },
                        new
                        {
                            ReligionId = 5,
                            ReligionName = "Other"
                        });
                });

            modelBuilder.Entity("TechJobs.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "JobSeeker"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "Employer"
                        },
                        new
                        {
                            RoleId = 3,
                            RoleName = "Admin"
                        });
                });

            modelBuilder.Entity("TechJobs.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleId");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            CreatedAt = new DateTime(2025, 6, 24, 1, 59, 35, 955, DateTimeKind.Utc).AddTicks(8917),
                            Email = "kaziabu.sayeed29@gmail.com",
                            FullName = "Kazi Abu Sayeed",
                            PasswordHash = "admin12345",
                            Phone = "01681-186651",
                            RoleId = 3
                        },
                        new
                        {
                            UserId = 2,
                            CreatedAt = new DateTime(2025, 6, 24, 1, 59, 35, 955, DateTimeKind.Utc).AddTicks(8920),
                            Email = "Mahmudul Hasan@gmail.com",
                            FullName = "Mahmudul Hasan",
                            PasswordHash = "mahmudul12345",
                            Phone = "01711-000002",
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 3,
                            CreatedAt = new DateTime(2025, 6, 24, 1, 59, 35, 955, DateTimeKind.Utc).AddTicks(8922),
                            Email = "jahangir.seeker@jobmail.com",
                            FullName = "Jahangir Alam",
                            PasswordHash = "jahangir_hash",
                            Phone = "01711-000003",
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 4,
                            CreatedAt = new DateTime(2025, 6, 24, 1, 59, 35, 955, DateTimeKind.Utc).AddTicks(8924),
                            Email = "nasima.employer@employer.com",
                            FullName = "Nasima Begum",
                            PasswordHash = "nasima_hash",
                            Phone = "01711-000004",
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 5,
                            CreatedAt = new DateTime(2025, 6, 24, 1, 59, 35, 955, DateTimeKind.Utc).AddTicks(8927),
                            Email = "abdur.employer@employer.com",
                            FullName = "Abdur Rahman",
                            PasswordHash = "abdur_hash",
                            Phone = "01711-000005",
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("TechJobs.Models.User", b =>
                {
                    b.HasOne("TechJobs.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TechJobs.Models.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
